#!/bin/bash
# Generated by jinja2 template
fcp="{{ fcp }}"
lun="{{ lun }}"
target_filename="{{ target_filename }}"

# see if zfcp is enable
enable_zfcp_mod=`lsmod | grep zfcp`
if [ -z "$enable_zfcp_mod" ];then
    modprobe zfcp
else
    echo "zfcp mode is already enabled"
fi

/sbin/cio_ignore -r $fcp > /dev/null
/sbin/chccwdev -e $fcp > /dev/null

# the number WWPNs is generated dynamically
# so we need to get them from the filesystem
declare -a ActiveWWPNs
ActiveWWPNs=(`ls /sys/bus/ccw/drivers/zfcp/0.0.$fcp/ | grep "0x"`)

# the host name of the FCP devices, for example
# the host name of "0.0.5c0c host0" is host0
# we need it to comprise the path of some files
HostName=`lszfcp | grep "$fcp" | cut -d " " -f 2`

# If auto-discovery of Fibre-Channel target ports is
# disabled on s390 platforms, ports need to be added to
# the configuration.
AutoPortScan=`cat /sys/module/zfcp/parameters/no_auto_port_rescan`
if [[ "$AutoPortScan" != "N" ]]; then
    echo 1 > /sys/bus/ccw/drivers/zfcp/0.0.$fcp/port_rescan
fi

# see if NPIV is enable or not
NPIV=`cat /sys/bus/ccw/drivers/zfcp/0.0.$fcp/$HostName/fc_host/$HostName/port_type`

# If auto-discovery of LUNs is disabled on s390 platforms
# luns need to be added to the configuration through
# the unit_add interface
AutoLunScan=`cat /sys/module/zfcp/parameters/allow_lun_scan`
if [[ "$AutoLunScan" != "Y" || "$NPIV" != "NPIV VPORT" ]]; then
    for wwpn in $ActiveWWPNs
    do
        # chzdev only exist in rhel version8.0+
        chzdev -e -a zfcp-lun 0.0.$fcp:$wwpn:$lun
        echo "$lun" > /sys/bus/ccw/drivers/zfcp/0.0.$fcp/$wwpn/unit_add
    done
fi

for wwpn in ${ActiveWWPNs[@]}
do
    echo "0.0.$fcp $wwpn $lun" >> /etc/zfcp.conf
done

echo "add" >> /sys/bus/ccw/devices/0.0.$fcp/uevent
if [[ $(which udevadm 2> /dev/null) != '' ]]; then
    udevadm settle
else
    udevsettle
fi

# wait for the devices ready
SourceDevices=(`ls /dev/disk/by-path/ | grep "ccw-0.0.$fcp-zfcp-.*:$lun"`)
SourceDevice="/dev/disk/by-path/${SourceDevices[0]}"
if [[ ! -e $SourceDevice ]]; then
    maxTime=20
    while [ $maxTime -gt 0]
    do
      if [[ -e $SourceDevice ]]; then
        break
      fi
      sleep 2
      ((maxTime-=2))
    done
fi

# ensure multipathd service is up
enable_multipath_mod=`lsmod | grep dm_multipath`
if [ -z "$enable_multipath_mod" ];then
    modprobe dm-multipath
    echo -e "#blacklist {
    #	devnode \"*\"
    #}
    " > /etc/multipath.conf
    mpathconf
    systemctl restart multipathd.service
else
    echo "dm-multipath mode is already enabled"
fi

# send an iSCSI scan request with given host and optionally the ctl 
# the ctl means, c: channel,default to -
#                t: target, default to -
#                l: lun, default to -
for host in `ls /sys/class/scsi_host/`
do
    echo "- - -" > /sys/class/scsi_host/$host/scan
done

# read the WWN from page 0x83 value for a SCSI device
WWID=`/lib/udev/scsi_id --page 0x83 --whitelisted /dev/disk/by-path/${SourceDevices[0]}`

# the symlink name that user specified
TargetFile="$target_filename"

ConfigLib="/lib/udev/rules.d/56-zfcp.rules"
if [ -e "$ConfigLib" ]
then
    ConfigFile="/lib/udev/rules.d/56-zfcp.rules"
else
    ConfigFile="/etc/udev/rules.d/56-zfcp.rules"
fi

# add udev rules
wwid_existed=`cat "$ConfigFile" | grep "$WWID"`
if [ -z "$wwid_existed" ];then
    LinkItem="KERNEL==\"dm-*\", ENV{DM_UUID}==\"mpath-$WWID\", SYMLINK+=\"$TargetFile\""
    echo -e $LinkItem >> $ConfigFile
else
    echo "$WWID" already in "$ConfigFile"
fi

# reload udev rules
udevadm control --reload
udevadm trigger --sysname-match=dm-*

exit 0
