#!/bin/bash
# Generated by jinja2 template
fcp="{{ fcp }}"
# lun example: 0x0100000000000000
lun="{{ lun }}"
# 1. if the lun id less than 256,
#    the file under /dev/disk/by-path/ will as below,
#    take 'lun id = 0' as example:
#    ccw-0.0.5c03-fc-0x5005076802400c1a-lun-0, the the lun id is decimal.
# 2. if the lun id is equal or more than 256,
#    the file under /dev/disk/by-path/ will as below,
#    take 'lun id = 256' as example:
#    ccw-0.0.1a0d-fc-0x500507680b26bac7-lun-0x0100000000000000,
#    the lun id is hex.
target_lun="{{ lun_id }}"
target_filename="{{ target_filename }}"

echo "Enter UBUNTU attach script with parameters: $fcp $lun $target_lun $target_filename."

# see if zfcp is enable
enable_zfcp_mod=`lsmod | grep zfcp`
if [ -z "$enable_zfcp_mod" ];then
    modprobe zfcp
else
    echo "zfcp mode is already enabled"
fi

/sbin/chzdev zfcp-host $fcp -e

declare -a ActiveWWPNs
ActiveWWPNs=(`ls /sys/bus/ccw/drivers/zfcp/0.0.$fcp/ | grep "0x"`)
echo "Get active WWPNs in ubuntu attach script: ${ActiveWWPNs[@]}"
HostName=`lszfcp | grep "$fcp" | cut -d " " -f 2`
echo "Get host name in ubuntu attach script: $HostName"

# see if NPIV is enable or not
NPIV=`cat /sys/bus/ccw/drivers/zfcp/0.0.$fcp/$HostName/fc_host/$HostName/port_type`
# If auto-discovery of LUNs is disabled on s390 platforms
# luns need to be added to the configuration through
# the unit_add interface
AutoLunScan=`cat /sys/module/zfcp/parameters/allow_lun_scan`
if [[ "$AutoLunScan" != "Y" || "$NPIV" != "NPIV VPORT" ]]; then
    echo "Auto LUN scan is disabled, so manually configure the SCSI devices."
    for wwpn in ${ActiveWWPNs[@]}
    do
        /sbin/chzdev zfcp-lun 0.0.$fcp:$wwpn:$lun -e
    done
fi

if [[ $(which udevadm 2> /dev/null) != '' ]]; then
    udevadm settle
else
    udevsettle
fi

# send an iSCSI scan request with given host and optionally the ctl 
# the ctl means, c: channel,default to -
#                t: target, default to -
#                l: lun, default to -
all_hosts=(`ls /sys/class/scsi_host/`)
for host in ${all_hosts[@]}
do
    echo "- - -" > /sys/class/scsi_host/$host/scan
    echo "scan request to host $host sent."
done

SourceDevice=(`ls /dev/disk/by-path/ | grep "ccw-0.0.$fcp-fc-.*-lun-$target_lun"`)

WWID=`/lib/udev/scsi_id --page 0x83 --whitelisted /dev/disk/by-path/$SourceDevice`

echo "Get wwid in ubuntu attach script: $WWID"

ConfigLib="/lib/udev/rules.d/56-zfcp.rules"
if [ -e "$ConfigLib" ]
then
    ConfigFile="/lib/udev/rules.d/56-zfcp.rules"
else
    ConfigFile="/etc/udev/rules.d/56-zfcp.rules"
fi

LinkItem="KERNEL==\"dm-*\", ENV{DM_UUID}==\"mpath-$WWID\", SYMLINK+=\"$target_filename\""
echo -e $LinkItem >> $ConfigFile

udevadm control --reload
udevadm trigger --sysname-match=dm-*

exit 0

